// Generated by view binder compiler. Do not edit!
package com.example.NourishConnect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.NourishConnect.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDeleteProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AppCompatButton Authentication;

  @NonNull
  public final AppCompatButton deleteProfie;

  @NonNull
  public final TextInputLayout oldpasswordLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextInputEditText regOldpassword;

  @NonNull
  public final TextView textViewYouAreNotAuthorized;

  private ActivityDeleteProfileBinding(@NonNull ScrollView rootView,
      @NonNull AppCompatButton Authentication, @NonNull AppCompatButton deleteProfie,
      @NonNull TextInputLayout oldpasswordLayout, @NonNull ProgressBar progressBar,
      @NonNull TextInputEditText regOldpassword, @NonNull TextView textViewYouAreNotAuthorized) {
    this.rootView = rootView;
    this.Authentication = Authentication;
    this.deleteProfie = deleteProfie;
    this.oldpasswordLayout = oldpasswordLayout;
    this.progressBar = progressBar;
    this.regOldpassword = regOldpassword;
    this.textViewYouAreNotAuthorized = textViewYouAreNotAuthorized;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDeleteProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDeleteProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_delete_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDeleteProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Authentication;
      AppCompatButton Authentication = ViewBindings.findChildViewById(rootView, id);
      if (Authentication == null) {
        break missingId;
      }

      id = R.id.deleteProfie;
      AppCompatButton deleteProfie = ViewBindings.findChildViewById(rootView, id);
      if (deleteProfie == null) {
        break missingId;
      }

      id = R.id.oldpasswordLayout;
      TextInputLayout oldpasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (oldpasswordLayout == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.reg_oldpassword;
      TextInputEditText regOldpassword = ViewBindings.findChildViewById(rootView, id);
      if (regOldpassword == null) {
        break missingId;
      }

      id = R.id.textViewYouAreNotAuthorized;
      TextView textViewYouAreNotAuthorized = ViewBindings.findChildViewById(rootView, id);
      if (textViewYouAreNotAuthorized == null) {
        break missingId;
      }

      return new ActivityDeleteProfileBinding((ScrollView) rootView, Authentication, deleteProfie,
          oldpasswordLayout, progressBar, regOldpassword, textViewYouAreNotAuthorized);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
